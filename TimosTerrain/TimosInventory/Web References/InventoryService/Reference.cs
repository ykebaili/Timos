//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TimosInventory.InventoryService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InventoryServiceSoap", Namespace="http://tempuri.org/")]
    public partial class InventoryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBaseConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseSessionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InventoryService() {
            this.Url = global::TimosInventory.Properties.Settings.Default.TimosInventory_InventoryService_InventoryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetBaseConfigCompletedEventHandler GetBaseConfigCompleted;
        
        /// <remarks/>
        public event GetSitesCompletedEventHandler GetSitesCompleted;
        
        /// <remarks/>
        public event GetEquipmentsCompletedEventHandler GetEquipmentsCompleted;
        
        /// <remarks/>
        public event GetReferencesSitesCompletedEventHandler GetReferencesSitesCompleted;
        
        /// <remarks/>
        public event OpenSessionCompletedEventHandler OpenSessionCompleted;
        
        /// <remarks/>
        public event SendSurveyCompletedEventHandler SendSurveyCompleted;
        
        /// <remarks/>
        public event CloseSessionCompletedEventHandler CloseSessionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBaseConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBaseConfig(int nIdSession) {
            object[] results = this.Invoke("GetBaseConfig", new object[] {
                        nIdSession});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBaseConfigAsync(int nIdSession) {
            this.GetBaseConfigAsync(nIdSession, null);
        }
        
        /// <remarks/>
        public void GetBaseConfigAsync(int nIdSession, object userState) {
            if ((this.GetBaseConfigOperationCompleted == null)) {
                this.GetBaseConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaseConfigOperationCompleted);
            }
            this.InvokeAsync("GetBaseConfig", new object[] {
                        nIdSession}, this.GetBaseConfigOperationCompleted, userState);
        }
        
        private void OnGetBaseConfigOperationCompleted(object arg) {
            if ((this.GetBaseConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaseConfigCompleted(this, new GetBaseConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSites(int nIdSession, int[] nIdSites) {
            object[] results = this.Invoke("GetSites", new object[] {
                        nIdSession,
                        nIdSites});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSitesAsync(int nIdSession, int[] nIdSites) {
            this.GetSitesAsync(nIdSession, nIdSites, null);
        }
        
        /// <remarks/>
        public void GetSitesAsync(int nIdSession, int[] nIdSites, object userState) {
            if ((this.GetSitesOperationCompleted == null)) {
                this.GetSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSitesOperationCompleted);
            }
            this.InvokeAsync("GetSites", new object[] {
                        nIdSession,
                        nIdSites}, this.GetSitesOperationCompleted, userState);
        }
        
        private void OnGetSitesOperationCompleted(object arg) {
            if ((this.GetSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSitesCompleted(this, new GetSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEquipments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEquipments(int nIdSession, int nIdSiteContenant) {
            object[] results = this.Invoke("GetEquipments", new object[] {
                        nIdSession,
                        nIdSiteContenant});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEquipmentsAsync(int nIdSession, int nIdSiteContenant) {
            this.GetEquipmentsAsync(nIdSession, nIdSiteContenant, null);
        }
        
        /// <remarks/>
        public void GetEquipmentsAsync(int nIdSession, int nIdSiteContenant, object userState) {
            if ((this.GetEquipmentsOperationCompleted == null)) {
                this.GetEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEquipmentsOperationCompleted);
            }
            this.InvokeAsync("GetEquipments", new object[] {
                        nIdSession,
                        nIdSiteContenant}, this.GetEquipmentsOperationCompleted, userState);
        }
        
        private void OnGetEquipmentsOperationCompleted(object arg) {
            if ((this.GetEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEquipmentsCompleted(this, new GetEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferencesSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferencesSites(int nIdSession) {
            object[] results = this.Invoke("GetReferencesSites", new object[] {
                        nIdSession});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesSitesAsync(int nIdSession) {
            this.GetReferencesSitesAsync(nIdSession, null);
        }
        
        /// <remarks/>
        public void GetReferencesSitesAsync(int nIdSession, object userState) {
            if ((this.GetReferencesSitesOperationCompleted == null)) {
                this.GetReferencesSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesSitesOperationCompleted);
            }
            this.InvokeAsync("GetReferencesSites", new object[] {
                        nIdSession}, this.GetReferencesSitesOperationCompleted, userState);
        }
        
        private void OnGetReferencesSitesOperationCompleted(object arg) {
            if ((this.GetReferencesSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesSitesCompleted(this, new GetReferencesSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OpenSession() {
            object[] results = this.Invoke("OpenSession", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OpenSessionAsync() {
            this.OpenSessionAsync(null);
        }
        
        /// <remarks/>
        public void OpenSessionAsync(object userState) {
            if ((this.OpenSessionOperationCompleted == null)) {
                this.OpenSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenSessionOperationCompleted);
            }
            this.InvokeAsync("OpenSession", new object[0], this.OpenSessionOperationCompleted, userState);
        }
        
        private void OnOpenSessionOperationCompleted(object arg) {
            if ((this.OpenSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenSessionCompleted(this, new OpenSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSurvey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSurvey(int nIdSession, System.Data.DataSet ds) {
            object[] results = this.Invoke("SendSurvey", new object[] {
                        nIdSession,
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSurveyAsync(int nIdSession, System.Data.DataSet ds) {
            this.SendSurveyAsync(nIdSession, ds, null);
        }
        
        /// <remarks/>
        public void SendSurveyAsync(int nIdSession, System.Data.DataSet ds, object userState) {
            if ((this.SendSurveyOperationCompleted == null)) {
                this.SendSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSurveyOperationCompleted);
            }
            this.InvokeAsync("SendSurvey", new object[] {
                        nIdSession,
                        ds}, this.SendSurveyOperationCompleted, userState);
        }
        
        private void OnSendSurveyOperationCompleted(object arg) {
            if ((this.SendSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSurveyCompleted(this, new SendSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseSession(int nIdSession) {
            this.Invoke("CloseSession", new object[] {
                        nIdSession});
        }
        
        /// <remarks/>
        public void CloseSessionAsync(int nIdSession) {
            this.CloseSessionAsync(nIdSession, null);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(int nIdSession, object userState) {
            if ((this.CloseSessionOperationCompleted == null)) {
                this.CloseSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseSessionOperationCompleted);
            }
            this.InvokeAsync("CloseSession", new object[] {
                        nIdSession}, this.CloseSessionOperationCompleted, userState);
        }
        
        private void OnCloseSessionOperationCompleted(object arg) {
            if ((this.CloseSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetBaseConfigCompletedEventHandler(object sender, GetBaseConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaseConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBaseConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSitesCompletedEventHandler(object sender, GetSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetEquipmentsCompletedEventHandler(object sender, GetEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReferencesSitesCompletedEventHandler(object sender, GetReferencesSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void OpenSessionCompletedEventHandler(object sender, OpenSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendSurveyCompletedEventHandler(object sender, SendSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CloseSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591